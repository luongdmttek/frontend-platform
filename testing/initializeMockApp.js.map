{"version":3,"file":"initializeMockApp.js","names":["configure","configureAnalytics","MockAnalyticsService","configureI18n","configureLogging","MockLoggingService","configureAuth","MockAuthService","getConfig","mockMessages","initializeMockApp","_ref","arguments","length","undefined","_ref$messages","messages","_ref$authenticatedUse","authenticatedUser","loggingService","config","authService","_objectSpread","analyticsService","httpClient","getAuthenticatedHttpClient"],"sources":["../../src/testing/initializeMockApp.js"],"sourcesContent":["import { configure as configureAnalytics, MockAnalyticsService } from '../analytics';\r\nimport { configure as configureI18n } from '../i18n';\r\nimport { configure as configureLogging, MockLoggingService } from '../logging';\r\nimport { configure as configureAuth, MockAuthService } from '../auth';\r\nimport { getConfig } from '../config';\r\nimport mockMessages from './mockMessages';\r\n\r\n/**\r\n * Initializes a mock application for component testing. The mock application includes\r\n * mock analytics, auth, and logging services, and the real i18n service.\r\n *\r\n * See MockAnalyticsService, MockAuthService, and MockLoggingService for mock implementation\r\n * details. For the most part, the analytics and logging services just implement their functions\r\n * with jest.fn() and do nothing else, whereas the MockAuthService actually has some behavior\r\n * implemented, it just doesn't make any HTTP calls.\r\n *\r\n * Note that this mock application is not sufficient for testing the full application lifecycle or\r\n * initialization callbacks/custom handlers as described in the 'initialize' function's\r\n * documentation. It exists merely to set up the mock services that components themselves tend to\r\n * interact with most often. It could be extended to allow for setting up custom handlers fairly\r\n * easily, as this functionality would be more-or-less identical to what the real initialize\r\n * function does.\r\n *\r\n * Example:\r\n *\r\n * ```\r\n * import { initializeMockApp } from '@edx/frontend-platform/testing';\r\n * import { logInfo } from '@edx/frontend-platform/logging';\r\n *\r\n * describe('initializeMockApp', () => {\r\n *   it('mocks things correctly', () => {\r\n *     const { loggingService } = initializeMockApp();\r\n *     logInfo('test', {});\r\n *     expect(loggingService.logInfo).toHaveBeenCalledWith('test', {});\r\n *   });\r\n * });\r\n * ```\r\n *\r\n * @param {Object} [options]\r\n * @param {*} [options.messages] A i18n-compatible messages object, or an array of such objects. If\r\n * an array is provided, duplicate keys are resolved with the last-one-in winning.\r\n * @param {UserData|null} [options.authenticatedUser] A UserData object representing the\r\n * authenticated user. This is passed directly to MockAuthService.\r\n * @memberof module:Testing\r\n */\r\nexport default function initializeMockApp({\r\n  messages = mockMessages,\r\n  authenticatedUser = null,\r\n} = {}) {\r\n  const loggingService = configureLogging(MockLoggingService, {\r\n    config: getConfig(),\r\n  });\r\n\r\n  const authService = configureAuth(MockAuthService, {\r\n    config: { ...getConfig(), authenticatedUser },\r\n    loggingService,\r\n  });\r\n\r\n  const analyticsService = configureAnalytics(MockAnalyticsService, {\r\n    config: getConfig(),\r\n    httpClient: authService.getAuthenticatedHttpClient(),\r\n    loggingService,\r\n  });\r\n\r\n  // The i18n service configure function has no return value, since there isn't a service class.\r\n  configureI18n({\r\n    config: getConfig(),\r\n    loggingService,\r\n    messages,\r\n  });\r\n\r\n  return {\r\n    analyticsService,\r\n    authService,\r\n    loggingService,\r\n  };\r\n}\r\n"],"mappings":";;;;;;AAAA,SAASA,SAAS,IAAIC,kBAAkB,EAAEC,oBAAoB,QAAQ,cAAc;AACpF,SAASF,SAAS,IAAIG,aAAa,QAAQ,SAAS;AACpD,SAASH,SAAS,IAAII,gBAAgB,EAAEC,kBAAkB,QAAQ,YAAY;AAC9E,SAASL,SAAS,IAAIM,aAAa,EAAEC,eAAe,QAAQ,SAAS;AACrE,SAASC,SAAS,QAAQ,WAAW;AACrC,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iBAAiBA,CAAA,EAGjC;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,CAAC,CAAC;IAAAG,aAAA,GAAAJ,IAAA,CAFJK,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAGN,YAAY,GAAAM,aAAA;IAAAE,qBAAA,GAAAN,IAAA,CACvBO,iBAAiB;IAAjBA,iBAAiB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;EAExB,IAAME,cAAc,GAAGf,gBAAgB,CAACC,kBAAkB,EAAE;IAC1De,MAAM,EAAEZ,SAAS,CAAC;EACpB,CAAC,CAAC;EAEF,IAAMa,WAAW,GAAGf,aAAa,CAACC,eAAe,EAAE;IACjDa,MAAM,EAAAE,aAAA,CAAAA,aAAA,KAAOd,SAAS,CAAC,CAAC;MAAEU,iBAAiB,EAAjBA;IAAiB,EAAE;IAC7CC,cAAc,EAAdA;EACF,CAAC,CAAC;EAEF,IAAMI,gBAAgB,GAAGtB,kBAAkB,CAACC,oBAAoB,EAAE;IAChEkB,MAAM,EAAEZ,SAAS,CAAC,CAAC;IACnBgB,UAAU,EAAEH,WAAW,CAACI,0BAA0B,CAAC,CAAC;IACpDN,cAAc,EAAdA;EACF,CAAC,CAAC;;EAEF;EACAhB,aAAa,CAAC;IACZiB,MAAM,EAAEZ,SAAS,CAAC,CAAC;IACnBW,cAAc,EAAdA,cAAc;IACdH,QAAQ,EAARA;EACF,CAAC,CAAC;EAEF,OAAO;IACLO,gBAAgB,EAAhBA,gBAAgB;IAChBF,WAAW,EAAXA,WAAW;IACXF,cAAc,EAAdA;EACF,CAAC;AACH"}