{"version":3,"file":"hooks.js","names":["useEffect","subscribe","unsubscribe","sendTrackEvent","useAppEvent","type","callback","subscriptionToken","cleanup","useTrackColorSchemeChoice","_window$matchMedia","_window","trackColorSchemeChoice","_ref","matches","preferredColorScheme","colorSchemeQuery","window","matchMedia","call","addEventListener","removeEventListener"],"sources":["../../src/react/hooks.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport { useEffect } from 'react';\r\nimport { subscribe, unsubscribe } from '../pubSub';\r\nimport { sendTrackEvent } from '../analytics';\r\n\r\n/**\r\n * A React hook that allows functional components to subscribe to application events.  This should\r\n * be used sparingly - for the most part, Context should be used higher-up in the application to\r\n * provide necessary data to a given component, rather than utilizing a non-React-like Pub/Sub\r\n * mechanism.\r\n *\r\n * @memberof module:React\r\n * @param {string} type\r\n * @param {function} callback\r\n */\r\nexport const useAppEvent = (type, callback) => {\r\n  useEffect(() => {\r\n    const subscriptionToken = subscribe(type, callback);\r\n\r\n    return function cleanup() {\r\n      unsubscribe(subscriptionToken);\r\n    };\r\n  }, [callback, type]);\r\n};\r\n\r\n/**\r\n * A React hook that tracks user's preferred color scheme (light or dark) and sends respective\r\n * event to the tracking service.\r\n *\r\n * @memberof module:React\r\n */\r\nexport const useTrackColorSchemeChoice = () => {\r\n  useEffect(() => {\r\n    const trackColorSchemeChoice = ({ matches }) => {\r\n      const preferredColorScheme = matches ? 'dark' : 'light';\r\n      sendTrackEvent('openedx.ui.frontend-platform.prefers-color-scheme.selected', { preferredColorScheme });\r\n    };\r\n    const colorSchemeQuery = window.matchMedia?.('(prefers-color-scheme: dark)');\r\n    if (colorSchemeQuery) {\r\n      // send user's initial choice\r\n      trackColorSchemeChoice(colorSchemeQuery);\r\n      colorSchemeQuery.addEventListener('change', trackColorSchemeChoice);\r\n    }\r\n    return () => {\r\n      if (colorSchemeQuery) {\r\n        colorSchemeQuery.removeEventListener('change', trackColorSchemeChoice);\r\n      }\r\n    };\r\n  }, []);\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,EAAEC,WAAW,QAAQ,WAAW;AAClD,SAASC,cAAc,QAAQ,cAAc;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,IAAI,EAAEC,QAAQ,EAAK;EAC7CN,SAAS,CAAC,YAAM;IACd,IAAMO,iBAAiB,GAAGN,SAAS,CAACI,IAAI,EAAEC,QAAQ,CAAC;IAEnD,OAAO,SAASE,OAAOA,CAAA,EAAG;MACxBN,WAAW,CAACK,iBAAiB,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAACD,QAAQ,EAAED,IAAI,CAAC,CAAC;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMI,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAS;EAC7CT,SAAS,CAAC,YAAM;IAAA,IAAAU,kBAAA,EAAAC,OAAA;IACd,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAAC,IAAA,EAAoB;MAAA,IAAdC,OAAO,GAAAD,IAAA,CAAPC,OAAO;MACvC,IAAMC,oBAAoB,GAAGD,OAAO,GAAG,MAAM,GAAG,OAAO;MACvDX,cAAc,CAAC,4DAA4D,EAAE;QAAEY,oBAAoB,EAApBA;MAAqB,CAAC,CAAC;IACxG,CAAC;IACD,IAAMC,gBAAgB,IAAAN,kBAAA,GAAG,CAAAC,OAAA,GAAAM,MAAM,EAACC,UAAU,cAAAR,kBAAA,uBAAjBA,kBAAA,CAAAS,IAAA,CAAAR,OAAA,EAAoB,8BAA8B,CAAC;IAC5E,IAAIK,gBAAgB,EAAE;MACpB;MACAJ,sBAAsB,CAACI,gBAAgB,CAAC;MACxCA,gBAAgB,CAACI,gBAAgB,CAAC,QAAQ,EAAER,sBAAsB,CAAC;IACrE;IACA,OAAO,YAAM;MACX,IAAII,gBAAgB,EAAE;QACpBA,gBAAgB,CAACK,mBAAmB,CAAC,QAAQ,EAAET,sBAAsB,CAAC;MACxE;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR,CAAC","ignoreList":[]}