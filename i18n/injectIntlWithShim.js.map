{"version":3,"file":"injectIntlWithShim.js","names":["React","injectIntl","getLoggingService","intlShape","injectIntlWithShim","WrappedComponent","ShimmedIntlComponent","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","shimmedIntl","Object","create","intl","formatMessage","value","definition","_this$props$intl","undefined","id","error","Error","process","env","NODE_ENV","console","logError","_len","arguments","length","args","Array","_key","apply","concat","_createClass","key","render","createElement","_extends","Component","propTypes","isRequired"],"sources":["../../src/i18n/injectIntlWithShim.jsx"],"sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { getLoggingService, intlShape } from './lib';\r\n\r\n/**\r\n * This function wraps react-intl's injectIntl function in order to add error logging to the intl\r\n * property's formatMessage function.\r\n *\r\n * @memberof I18n\r\n */\r\nconst injectIntlWithShim = (WrappedComponent) => {\r\n  class ShimmedIntlComponent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.shimmedIntl = Object.create(this.props.intl, {\r\n        formatMessage: {\r\n          value: (definition, ...args) => {\r\n            if (definition === undefined || definition.id === undefined) {\r\n              const error = new Error('i18n error: An undefined message was supplied to intl.formatMessage.');\r\n              if (process.env.NODE_ENV !== 'production') {\r\n                console.error(error); // eslint-disable-line no-console\r\n                return '!!! Missing message supplied to intl.formatMessage !!!';\r\n              }\r\n              getLoggingService().logError(error);\r\n              return ''; // Fail silently in production\r\n            }\r\n            return this.props.intl.formatMessage(definition, ...args);\r\n          },\r\n        },\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} intl={this.shimmedIntl} />;\r\n    }\r\n  }\r\n\r\n  ShimmedIntlComponent.propTypes = {\r\n    intl: intlShape.isRequired,\r\n  };\r\n\r\n  return injectIntl(ShimmedIntlComponent);\r\n};\r\n\r\nexport default injectIntlWithShim;\r\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,iBAAiB,EAAEC,SAAS,QAAQ,OAAO;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,gBAAgB,EAAK;EAAA,IACzCC,oBAAoB,0BAAAC,gBAAA;IAAAC,SAAA,CAAAF,oBAAA,EAAAC,gBAAA;IAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,oBAAA;IACxB,SAAAA,qBAAYK,KAAK,EAAE;MAAA,IAAAC,KAAA;MAAAC,eAAA,OAAAP,oBAAA;MACjBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,KAAK;MACXC,KAAA,CAAKG,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAA,CAAKD,KAAK,CAACO,IAAI,EAAE;QAChDC,aAAa,EAAE;UACbC,KAAK,EAAE,SAAAA,MAACC,UAAU,EAAc;YAAA,IAAAC,gBAAA;YAC9B,IAAID,UAAU,KAAKE,SAAS,IAAIF,UAAU,CAACG,EAAE,KAAKD,SAAS,EAAE;cAC3D,IAAME,KAAK,GAAG,IAAIC,KAAK,CAAC,sEAAsE,CAAC;cAC/F,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;gBACzCC,OAAO,CAACL,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;gBACtB,OAAO,wDAAwD;cACjE;cACAvB,iBAAiB,CAAC,CAAC,CAAC6B,QAAQ,CAACN,KAAK,CAAC;cACnC,OAAO,EAAE,CAAC,CAAC;YACb;YAAC,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAToBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;cAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;YAAA;YAUzB,OAAO,CAAAf,gBAAA,GAAAV,KAAA,CAAKD,KAAK,CAACO,IAAI,EAACC,aAAa,CAAAmB,KAAA,CAAAhB,gBAAA,GAACD,UAAU,EAAAkB,MAAA,CAAKJ,IAAI,EAAC;UAC3D;QACF;MACF,CAAC,CAAC;MAAC,OAAAvB,KAAA;IACL;IAAC4B,YAAA,CAAAlC,oBAAA;MAAAmC,GAAA;MAAArB,KAAA,EAED,SAAAsB,OAAA,EAAS;QACP,oBAAO1C,KAAA,CAAA2C,aAAA,CAACtC,gBAAgB,EAAAuC,QAAA,KAAK,IAAI,CAACjC,KAAK;UAAEO,IAAI,EAAE,IAAI,CAACH;QAAY,EAAE,CAAC;MACrE;IAAC;IAAA,OAAAT,oBAAA;EAAA,EAvBgCN,KAAK,CAAC6C,SAAS;EA0BlDvC,oBAAoB,CAACwC,SAAS,GAAG;IAC/B5B,IAAI,EAAEf,SAAS,CAAC4C;EAClB,CAAC;EAED,OAAO9C,UAAU,CAACK,oBAAoB,CAAC;AACzC,CAAC;AAED,eAAeF,kBAAkB"}