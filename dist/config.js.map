{"version":3,"file":"config.js","names":["APP_CONFIG_INITIALIZED","CONFIG_CHANGED","publish","subscribe","ensureDefinedConfig","extractRegex","envVar","trim","RegExp","undefined","ENVIRONMENT","process","env","NODE_ENV","config","ACCESS_TOKEN_COOKIE_NAME","ACCOUNT_PROFILE_URL","ACCOUNT_SETTINGS_URL","BASE_URL","PUBLIC_PATH","CREDENTIALS_BASE_URL","CSRF_TOKEN_API_PATH","DISCOVERY_API_BASE_URL","PUBLISHER_BASE_URL","ECOMMERCE_BASE_URL","IGNORED_ERROR_REGEX","LANGUAGE_PREFERENCE_COOKIE_NAME","LEARNING_BASE_URL","LMS_BASE_URL","LOGIN_URL","LOGOUT_URL","STUDIO_BASE_URL","MARKETING_SITE_BASE_URL","ORDER_HISTORY_URL","REFRESH_ACCESS_TOKEN_ENDPOINT","SECURE_COOKIES","SEGMENT_KEY","SITE_NAME","USER_INFO_COOKIE_NAME","LOGO_URL","LOGO_TRADEMARK_URL","LOGO_WHITE_URL","FAVICON_URL","MFE_CONFIG_API_URL","APP_ID","SUPPORT_URL","getConfig","setConfig","newConfig","mergeConfig","Object","assign","ensureConfig","keys","requester","arguments","length","forEach","key","console","warn","concat"],"sources":["../src/config.js"],"sourcesContent":["/**\r\n * #### Import members from **@edx/frontend-platform**\r\n *\r\n * The configuration module provides utilities for working with an application's configuration\r\n * document (ConfigDocument).  Configuration variables can be supplied to the\r\n * application in four different ways.  They are applied in the following order:\r\n *\r\n * - Build-time Configuration\r\n *   - Environment Variables\r\n *   - JavaScript File\r\n * - Runtime Configuration\r\n *\r\n * Last one in wins.  Variables with the same name defined via the later methods will override any\r\n * defined using an earlier method.  i.e., if a variable is defined in Runtime Configuration, that\r\n * will override the same variable defined in either Build-time Configuration method (environment\r\n * variables or JS file).  Configuration defined in a JS file will override environment variables.\r\n *\r\n * ##### Build-time Configuration\r\n *\r\n * Build-time configuration methods add config variables into the app when it is built by webpack.\r\n * This saves the app an API call and means it has all the information it needs to initialize right\r\n * away.  There are two methods of supplying build-time configuration: environment variables and a\r\n * JavaScript file.\r\n *\r\n * ###### Environment Variables\r\n *\r\n * A set list of required config variables can be supplied as\r\n * command-line environment variables during the build process.\r\n *\r\n * As a simple example, these are supplied on the command-line before invoking `npm run build`:\r\n *\r\n * ```\r\n * LMS_BASE_URL=http://localhost:18000 npm run build\r\n * ```\r\n *\r\n * Note that additional variables _cannot_ be supplied via this method without using the `config`\r\n * initialization handler.  The app won't pick them up and they'll appear `undefined`.\r\n *\r\n * This configuration method is being deprecated in favor of JavaScript File Configuration.\r\n *\r\n * ###### JavaScript File Configuration\r\n *\r\n * Configuration variables can be supplied in an optional file named env.config.js.  This file must\r\n * export either an Object containing configuration variables or a function.  The function must\r\n * return an Object containing configuration variables or, alternately, a promise which resolves to\r\n * an Object.\r\n *\r\n * Using a function or async function allows the configuration to be resolved at runtime (because\r\n * the function will be executed at runtime).  This is not common, and the capability is included\r\n * for the sake of flexibility.\r\n *\r\n * JavaScript File Configuration is well-suited to extensibility use cases or component overrides,\r\n * in that the configuration file can depend on any installed JavaScript module.  It is also the\r\n * preferred way of doing build-time configuration if runtime configuration isn't used by your\r\n * deployment of the platform.\r\n *\r\n * Exporting a config object:\r\n * ```\r\n * const config = {\r\n *   LMS_BASE_URL: 'http://localhost:18000'\r\n * };\r\n *\r\n * export default config;\r\n * ```\r\n *\r\n * Exporting a function that returns an object:\r\n * ```\r\n * function getConfig() {\r\n *   return {\r\n *     LMS_BASE_URL: 'http://localhost:18000'\r\n *   };\r\n * }\r\n * ```\r\n *\r\n * Exporting a function that returns a promise that resolves to an object:\r\n * ```\r\n * function getAsyncConfig() {\r\n *   return new Promise((resolve, reject) => {\r\n *     resolve({\r\n *       LMS_BASE_URL: 'http://localhost:18000'\r\n *     });\r\n *   });\r\n * }\r\n *\r\n * export default getAsyncConfig;\r\n * ```\r\n *\r\n * ##### Runtime Configuration\r\n *\r\n * Configuration variables can also be supplied using the \"runtime configuration\" method, taking\r\n * advantage of the Micro-frontend Config API in edx-platform. More information on this API can be\r\n * found in the ADR which introduced it:\r\n *\r\n * https://github.com/openedx/edx-platform/blob/master/lms/djangoapps/mfe_config_api/docs/decisions/0001-mfe-config-api.rst\r\n *\r\n * The runtime configuration method can be enabled by supplying a MFE_CONFIG_API_URL via one of the other\r\n * two configuration methods above.\r\n *\r\n * Runtime configuration is particularly useful if you need to supply different configurations to\r\n * a single deployment of a micro-frontend, for instance.  It is also a perfectly valid alternative\r\n * to build-time configuration, though it introduces an additional API call to edx-platform on MFE\r\n * initialization.\r\n *\r\n * ##### Initialization Config Handler\r\n *\r\n * The configuration document can be extended by\r\n * applications at run-time using a `config` initialization handler.  Please see the Initialization\r\n * documentation for more information on handlers and initialization phases.\r\n *\r\n * ```\r\n * initialize({\r\n *   handlers: {\r\n *     config: () => {\r\n *       mergeConfig({\r\n *         CUSTOM_VARIABLE: 'custom value',\r\n *         LMS_BASE_URL: 'http://localhost:18001' // You can override variables, but this is uncommon.\r\n  *       }, 'App config override handler');\r\n *     },\r\n *   },\r\n * });\r\n * ```\r\n *\r\n * @module Config\r\n */\r\n\r\nimport { APP_CONFIG_INITIALIZED, CONFIG_CHANGED } from './constants';\r\n\r\nimport { publish, subscribe } from './pubSub';\r\nimport { ensureDefinedConfig } from './utils';\r\n\r\nfunction extractRegex(envVar) {\r\n  // Convert the environment variable string to a regex, while guarding\r\n  // against a non-string and an empty/whitespace-only string.\r\n  if (typeof envVar === 'string' && envVar.trim() !== '') {\r\n    return new RegExp(envVar);\r\n  }\r\n  return undefined;\r\n}\r\n\r\nconst ENVIRONMENT = process.env.NODE_ENV;\r\nlet config = {\r\n  ACCESS_TOKEN_COOKIE_NAME: process.env.ACCESS_TOKEN_COOKIE_NAME,\r\n  ACCOUNT_PROFILE_URL: process.env.ACCOUNT_PROFILE_URL,\r\n  ACCOUNT_SETTINGS_URL: process.env.ACCOUNT_SETTINGS_URL,\r\n  BASE_URL: process.env.BASE_URL,\r\n  PUBLIC_PATH: process.env.PUBLIC_PATH || '/',\r\n  CREDENTIALS_BASE_URL: process.env.CREDENTIALS_BASE_URL,\r\n  CSRF_TOKEN_API_PATH: process.env.CSRF_TOKEN_API_PATH,\r\n  DISCOVERY_API_BASE_URL: process.env.DISCOVERY_API_BASE_URL,\r\n  PUBLISHER_BASE_URL: process.env.PUBLISHER_BASE_URL,\r\n  ECOMMERCE_BASE_URL: process.env.ECOMMERCE_BASE_URL,\r\n  ENVIRONMENT,\r\n  IGNORED_ERROR_REGEX: extractRegex(process.env.IGNORED_ERROR_REGEX),\r\n  LANGUAGE_PREFERENCE_COOKIE_NAME: process.env.LANGUAGE_PREFERENCE_COOKIE_NAME,\r\n  LEARNING_BASE_URL: process.env.LEARNING_BASE_URL,\r\n  LMS_BASE_URL: process.env.LMS_BASE_URL,\r\n  LOGIN_URL: process.env.LOGIN_URL,\r\n  LOGOUT_URL: process.env.LOGOUT_URL,\r\n  STUDIO_BASE_URL: process.env.STUDIO_BASE_URL,\r\n  MARKETING_SITE_BASE_URL: process.env.MARKETING_SITE_BASE_URL,\r\n  ORDER_HISTORY_URL: process.env.ORDER_HISTORY_URL,\r\n  REFRESH_ACCESS_TOKEN_ENDPOINT: process.env.REFRESH_ACCESS_TOKEN_ENDPOINT,\r\n  SECURE_COOKIES: ENVIRONMENT !== 'development',\r\n  SEGMENT_KEY: process.env.SEGMENT_KEY,\r\n  SITE_NAME: process.env.SITE_NAME,\r\n  USER_INFO_COOKIE_NAME: process.env.USER_INFO_COOKIE_NAME,\r\n  LOGO_URL: process.env.LOGO_URL,\r\n  LOGO_TRADEMARK_URL: process.env.LOGO_TRADEMARK_URL,\r\n  LOGO_WHITE_URL: process.env.LOGO_WHITE_URL,\r\n  FAVICON_URL: process.env.FAVICON_URL,\r\n  MFE_CONFIG_API_URL: process.env.MFE_CONFIG_API_URL,\r\n  APP_ID: process.env.APP_ID,\r\n  SUPPORT_URL: process.env.SUPPORT_URL,\r\n};\r\n\r\n/**\r\n * Getter for the application configuration document.  This is synchronous and merely returns a\r\n * reference to an existing object, and is thus safe to call as often as desired.\r\n *\r\n * Example:\r\n *\r\n * ```\r\n * import { getConfig } from '@edx/frontend-platform';\r\n *\r\n * const {\r\n *   LMS_BASE_URL,\r\n * } = getConfig();\r\n * ```\r\n *\r\n * @returns {ConfigDocument}\r\n  */\r\nexport function getConfig() {\r\n  return config;\r\n}\r\n\r\n/**\r\n * Replaces the existing ConfigDocument.  This is not commonly used, but can be helpful for tests.\r\n *\r\n * The supplied config document will be tested with `ensureDefinedConfig` to ensure it does not\r\n * have any `undefined` keys.\r\n *\r\n * Example:\r\n *\r\n * ```\r\n * import { setConfig } from '@edx/frontend-platform';\r\n *\r\n * setConfig({\r\n *   LMS_BASE_URL, // This is overriding the ENTIRE document - this is not merged in!\r\n * });\r\n * ```\r\n *\r\n * @param {ConfigDocument} newConfig\r\n */\r\nexport function setConfig(newConfig) {\r\n  ensureDefinedConfig(config, 'config');\r\n  config = newConfig;\r\n  publish(CONFIG_CHANGED);\r\n}\r\n\r\n/**\r\n * Merges additional configuration values into the ConfigDocument returned by `getConfig`.  Will\r\n * override any values that exist with the same keys.\r\n *\r\n * ```\r\n * mergeConfig({\r\n *   NEW_KEY: 'new value',\r\n *   OTHER_NEW_KEY: 'other new value',\r\n * });\r\n *\r\n * If any of the key values are `undefined`, an error will be logged to 'warn'.\r\n *\r\n * @param {Object} newConfig\r\n */\r\nexport function mergeConfig(newConfig) {\r\n  ensureDefinedConfig(newConfig, 'ProcessEnvConfigService');\r\n  config = Object.assign(config, newConfig);\r\n  publish(CONFIG_CHANGED);\r\n}\r\n\r\n/**\r\n * A method allowing application code to indicate that particular ConfigDocument keys are required\r\n * for them to function.  This is useful for diagnosing development/deployment issues, primarily,\r\n * by surfacing misconfigurations early.  For instance, if the build process fails to supply an\r\n * environment variable on the command-line, it's possible that one of the `process.env` variables\r\n * will be undefined.  Should be used in conjunction with `mergeConfig` for custom `ConfigDocument`\r\n * properties.  Requester is for informational/error reporting purposes only.\r\n *\r\n * ```\r\n * ensureConfig(['LMS_BASE_URL', 'LOGIN_URL'], 'MySpecialComponent');\r\n *\r\n * // Will log a warning with:\r\n * // \"App configuration error: LOGIN_URL is required by MySpecialComponent.\"\r\n * // if LOGIN_URL is undefined, for example.\r\n * ```\r\n *\r\n * *NOTE*: `ensureConfig` waits until `APP_CONFIG_INITIALIZED` is published to verify the existence\r\n * of the specified properties.  This means that this function is compatible with custom `config`\r\n * phase handlers responsible for loading additional configuration data in the initialization\r\n * sequence.\r\n *\r\n * @param {Array} keys\r\n * @param {string} [requester='unspecified application code']\r\n */\r\nexport function ensureConfig(keys, requester = 'unspecified application code') {\r\n  subscribe(APP_CONFIG_INITIALIZED, () => {\r\n    keys.forEach((key) => {\r\n      if (config[key] === undefined) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`App configuration error: ${key} is required by ${requester}.`);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * An object describing the current application configuration.\r\n *\r\n * In its most basic form, the initialization process loads this document via `process.env`\r\n * variables.  There are other ways to add configuration variables to the ConfigDocument as\r\n * documented above (JavaScript File Configuration, Runtime Configuration, and the Initialization\r\n * Config Handler)\r\n *\r\n * ```\r\n * {\r\n *   BASE_URL: process.env.BASE_URL,\r\n *   // ... other vars\r\n * }\r\n * ```\r\n *\r\n * When using Webpack (i.e., normal usage), the build process is responsible for supplying these\r\n * variables via command-line environment variables.  That means they must be supplied at build\r\n * time.\r\n *\r\n * @name ConfigDocument\r\n * @memberof module:Config\r\n * @property {string} ACCESS_TOKEN_COOKIE_NAME\r\n * @property {string} ACCOUNT_PROFILE_URL\r\n * @property {string} ACCOUNT_SETTINGS_URL\r\n * @property {string} BASE_URL The URL of the current application.\r\n * @property {string} CREDENTIALS_BASE_URL\r\n * @property {string} CSRF_TOKEN_API_PATH\r\n * @property {string} DISCOVERY_API_BASE_URL\r\n * @property {string} PUBLISHER_BASE_URL\r\n * @property {string} ECOMMERCE_BASE_URL\r\n * @property {string} ENVIRONMENT This is one of: development, production, or test.\r\n * @property {string} IGNORED_ERROR_REGEX\r\n * @property {string} LANGUAGE_PREFERENCE_COOKIE_NAME\r\n * @property {string} LEARNING_BASE_URL\r\n * @property {string} LMS_BASE_URL\r\n * @property {string} LOGIN_URL\r\n * @property {string} LOGOUT_URL\r\n * @property {string} STUDIO_BASE_URL\r\n * @property {string} MARKETING_SITE_BASE_URL\r\n * @property {string} ORDER_HISTORY_URL\r\n * @property {string} REFRESH_ACCESS_TOKEN_ENDPOINT\r\n * @property {boolean} SECURE_COOKIES\r\n * @property {string} SEGMENT_KEY\r\n * @property {string} SITE_NAME\r\n * @property {string} USER_INFO_COOKIE_NAME\r\n * @property {string} LOGO_URL\r\n * @property {string} LOGO_TRADEMARK_URL\r\n * @property {string} LOGO_WHITE_URL\r\n * @property {string} FAVICON_URL\r\n * @property {string} MFE_CONFIG_API_URL\r\n * @property {string} APP_ID\r\n * @property {string} SUPPORT_URL\r\n */\r\n"],"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4C,SAAS,EAAE,yBAAyB,CAAC;EACzDlC,MAAM,GAAGoC,MAAM,CAACC,MAAM,CAACrC,MAAM,EAAEkC,SAAS,CAAC;EACzC9C,OAAO,CAACD,cAAc,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASmD,YAAYA,CAACC,IAAI,EAA8C;EAAA,IAA5CC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA9C,SAAA,GAAA8C,SAAA,MAAG,8BAA8B;EAC3EpD,SAAS,CAACH,sBAAsB,EAAE,YAAM;IACtCqD,IAAI,CAACI,OAAO,CAAC,UAACC,GAAG,EAAK;MACpB,IAAI5C,MAAM,CAAC4C,GAAG,CAAC,KAAKjD,SAAS,EAAE;QAC7B;QACAkD,OAAO,CAACC,IAAI,6BAAAC,MAAA,CAA6BH,GAAG,sBAAAG,MAAA,CAAmBP,SAAS,MAAG,CAAC;MAC9E;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}